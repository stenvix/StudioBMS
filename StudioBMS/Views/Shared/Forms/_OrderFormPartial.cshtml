@using System.Globalization
@using StudioBMS.Business.DTO.Models
@model OrderViewModel
@inject IHtmlLocalizer<ModelResource> ModelLocalizer
@{
    var action = ViewData.ContainsKey("Action") ? (BusinessAction)ViewData["Action"] : BusinessAction.Create;
    var customers = ViewData["Customers"] as IList<PersonModel> ?? new List<PersonModel>();
    var workshops = ViewData["Workshops"] as IList<WorkshopModel> ?? new List<WorkshopModel>();
    var performers = ViewData["Performers"] as IList<PersonModel> ?? new List<PersonModel>();
    var services = ViewData["Services"] as IList<ServiceModel> ?? new List<ServiceModel>();
    var statuses = ViewData["Statuses"] as IList<OrderStatusModel> ?? new List<OrderStatusModel>();
}

<input type="hidden" asp-for="OrderNumber" />
<input type="hidden" asp-for="Id" />
@if (User.Identity.IsAuthenticated)
{
    if (!User.IsInRole(StringConstants.CustomerRole))
    {
        <div class="form-group">
            <label>@ModelLocalizer["Customer"]</label>
            <select class="chosen" asp-for="CustomerId">
                @foreach (var customer in customers)
                {
                    if (customer.Id == Model.CustomerId)
                    {
                        <option value="@customer.Id" selected="selected">@customer.FullName</option>
                    }
                    else
                    {
                        <option value="@customer.Id"> @customer.FullName</option>
                    }
                }
            </select>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="CustomerId" />
    }
}
@if (!User.Identity.IsAuthenticated || User.IsInRole(StringConstants.CustomerRole) && !Model.IsPaid || User.IsInRole(StringConstants.AdministratorRole))
{
    <div class="form-group">
        <label>@ModelLocalizer["Workshop"]</label>
        <select class="chosen" asp-for="WorkshopId">
            @foreach (var workshop in workshops)
                {
                <option value="@workshop.Id">@workshop.Title (@workshop.City)</option>
            }
        </select>
    </div>
}
else
{
    <input type="hidden" asp-for="WorkshopId" />
}
@if (!User.Identity.IsAuthenticated || User.IsInRole(StringConstants.CustomerRole) && !Model.IsPaid || User.IsInRole(StringConstants.ManagerRole) || User.IsInRole(StringConstants.AdministratorRole))
{
    <div class="form-group">
        <label>@ModelLocalizer["Master"]</label>
        <select class="chosen" asp-for="PerformerId">
            @foreach (var performer in performers)
                {
                <option value="@performer.Id">@performer.FirstName @performer.LastName (@ModelLocalizer[performer.Role.Name])</option>
            }
        </select>
    </div>
}
else
{
    <input type="hidden" asp-for="PerformerId" />
}
@if (!User.Identity.IsAuthenticated || User.IsInRole(StringConstants.CustomerRole) && !Model.IsPaid || User.IsInRole(StringConstants.ManagerRole) || User.IsInRole(StringConstants.AdministratorRole))
{
    <div class="form-group">
        <label>@ModelLocalizer["Services"]</label>
        <select class="chosen" multiple="multiple" asp-for="ServiceIds">
            @foreach (var service in services)
            {
                <option value="@service.Id">@service.Title</option>
            }
        </select>
    </div>
}
else
{
    <input type="hidden" asp-for="ServiceIds" />
}
<div class="form-group">
    <label>@ModelLocalizer["DateAndTime"]</label>
    @*data-mindate="@($"{DateTime.Now.AddMinutes(30):yyyy-MM-dd HH:mm}")" TODO: Fix bug with initialization *@
    <div class="input-group datetimepicker" data-format="YYYY-MM-DD HH:mm" data-locale="@CultureInfo.CurrentCulture.Name">
        <input class="form-control" asp-for="Date" asp-format="{0:yyyy-MM-dd HH:mm}" />
        <span class="input-group-addon">
            <i class="fa fa-calendar"></i>
        </span>
    </div>
</div>

@if (User.IsInRole(StringConstants.ManagerRole) || User.IsInRole(StringConstants.AdministratorRole))
{
    if (action == BusinessAction.Update)
    {
        <div class="form-group">
            <label>@ModelLocalizer["OrderStatus"]</label>
            <select asp-for="StatusId" class="chosen">
                @foreach (var status in statuses)
                {
                    <option value="@status.Id">@ModelLocalizer[status.Name]</option>
                }
            </select>
        </div>

        if (User.IsInRole(StringConstants.AdministratorRole))
        {
            <div class="form-group">
                <label>@ModelLocalizer[nameof(Model.Price)]</label>
                <input asp-for="Price" class="form-control" step="0.1" type="number" />
            </div>
            <div class="form-group">
                <label>@ModelLocalizer[nameof(Model.Balance)]</label>
                <input asp-for="Balance" class="form-control" step="0.1" type="number" />
            </div>
        }
    }
}
else
{
    <input type="hidden" asp-for="StatusId" />
    <input type="hidden" asp-for="Price" />
    <input type="hidden" asp-for="Balance" />
}

@if (!User.Identity.IsAuthenticated)
{
    <hr />
    <div class="row">
        <div class="col-md-6 form-group">
            <label>@ModelLocalizer["LastName"]</label>
            <input asp-for="LastName" class="form-control" />
        </div>
        <div class="col-md-6 form-group">
            <label>@ModelLocalizer["FirstName"]</label>
            <input asp-for="FirstName" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label>@ModelLocalizer["EMail"]</label>
        <input class="form-control" asp-for="EMail" />
    </div>
    <div class="form-group">
        <label>@ModelLocalizer["Phone"]</label>
        <input class="form-control" asp-for="Phone" />
    </div>
}
<div class="form-group row">
    <div class="col-lg-6 col-lg-offset-3">
        <button type="submit" class="btn btn-block btn-primary">@ModelLocalizer["Confirm"]</button>
    </div>
</div>
